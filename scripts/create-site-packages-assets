#!/bin/bash
SCRIPT_DIR=$( cd -- $( dirname -- ${BASH_SOURCE[0]} ) &> /dev/null && pwd )
ROOT_DIR=$(realpath $SCRIPT_DIR/..)
ANDROID_SDK_ROOT=$HOME/.android/Sdk
#ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.0.8775105
ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.1.8937393
BUILD_PYTHON=$HOME/.pyenv/shims/python3.10
BUILD_PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin
BUILD_PATH=$BUILD_PATH:$(dirname $BUILD_PYTHON)
BUILD_PATH=$BUILD_PATH:/usr/bin:/bin
API_LEVEL=28

declare -A abi_cc

abi_cc['x86']="i686-linux-android$API_LEVEL-clang"
abi_cc['x86_64']="x86_64-linux-android$API_LEVEL-clang"
abi_cc['arm64-v8a']="aarch64-linux-android$API_LEVEL-clang"
abi_cc['armeabi-v7a']="armv7a-linux-androideabi$API_LEVEL-clang"

function rm_pycache {
  local target_dir=$1

  for dir in $(find $target_dir -type d -iname "__pycache__")
  do
    if [ -e $dir ]
    then
      rm -rf $dir
    fi
  done
}

function install_requirements {
  local abi=$1
  local cc=${abi_cc[$abi]}
  local host_python=$ROOT_DIR/deps/$abi/bin/python3
  local env_path=$ROOT_DIR/venv/bin:$ROOT_DIR/venv/cross/bin:$BUILD_PATH
  local target_dir=$ROOT_DIR/site-packages/$abi

  rm -rf $ROOT_DIR/env
  rm -rf $target_dir
  mkdir -p $target_dir

  printf "\nCreate cross-env\n"
  env -C $ROOT_DIR -i PATH=$BUILD_PATH \
    $BUILD_PYTHON -m crossenv --ar llvm-ar --cc $cc --cxx ${cc}++ \
      --config-var=CFLAGS="-I$ROOT_DIR/libs/$abi/include/python3.10 -fPIC" \
      $host_python venv
  if [ $? -ne 0 ]; then exit 1; fi

  printf "\nUpgrade pip and setuptools\n"
  env -C $ROOT_DIR -i PATH=$env_path VIRTUAL_ENV=$ROOT_DIR/venv/cross \
    build-pip3 install -U pip setuptools
  if [ $? -ne 0 ]; then exit 1; fi

  printf "\nInstall requirements\n"
  env -C $ROOT_DIR -i PATH=$env_path VIRTUAL_ENV=$ROOT_DIR/env/cross \
    pip3 install -r $ROOT_DIR/requirements.txt
  if [ $? -ne 0 ]; then exit 1; fi

  printf "\nCopy site-packages into $target_dir\n"
  cp -r  $ROOT_DIR/venv/cross/lib/python3.10/site-packages/* $target_dir/

  printf "\nRemove pip and setuptools in target site-packages\n"
  rm -rf $target_dir/{pip,setuptools}
  rm -rf $target_dir/pip-*
  rm -rf $target_dir/setuptools-*

  #printf "\nRemove __pycache__ folders\n"
  #rm_pycache $target_dir
  rm -rf $ROOT_DIR/venv
}

rm -rf $ROOT_DIR/site-packages
for abi in ${!abi_cc[@]}
do
  install_requirements $abi
done

